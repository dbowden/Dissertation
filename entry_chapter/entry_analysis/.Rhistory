fill(ethfrac, mtnest, .direction = "up")
# 4. IV 2a: EPR groups --------
epr <- read.csv("EPR-2014.csv")
epr <- epr %>%
rowwise() %>%
do(data.frame(GWNoA=.$gwid, Year=seq(.$from, .$to), gwgroupid=.$gwgroupid, size=.$size, status=.$status, reg_aut=.$reg_aut))
epr$status_recode <- recode(epr$status, "MONOPOLY" = "absolute", "DOMINANT" = "absolute", "SENIOR PARTNER" = "power-sharing", "JUNIOR PARTNER" = "power-sharing", "DISCRIMINATED" = "excluded", "POWERLESS" = "excluded", "IRRELEVANT" = "excluded", "SELF-EXCLUSION" = "excluded")
#aggregate to country years
epr <- epr %>%
group_by(GWNoA, Year) %>%
summarize(country_ethnic=n_distinct(gwgroupid), country_excluded=sum(status_recode=="excluded", na.rm=T))
ucdp.dyad <- left_join(ucdp.dyad, epr)
rm(epr)
# 5. Instrument: Oil Revenue -------
##oil rents per capita (Ross measure)
rents <- WDI(country = "all", indicator = "NY.GDP.PETR.RT.ZS", start=1960, end=2015) #% of GDP
gdppc <- WDI(country="all", indicator="NY.GDP.PCAP.CD", start=1960, end=2015)
rents <- left_join(rents, gdppc)
#multiplyin oil as % of GDP by gdppc should produce oilpc
rents$oilpc <- rents$NY.GDP.PETR.RT.ZS * rents$NY.GDP.PCAP.CD
rents$GWNoA <- countrycode(rents$iso2c, "iso2c", "cown")
rents <- select(rents, GWNoA, Year=year, oilpc)
ucdp.dyad <- left_join(ucdp.dyad, rents)
rm(rents, gdppc)
## Oil as % of merch exports
fuel <- WDI(country="all", indicator="TX.VAL.FUEL.ZS.UN", start=1960, end=2015)
fuel$GWNoA <- countrycode(fuel$iso2c, "iso2c", "cown")
fuel <- select(fuel, GWNoA, Year=year, oil.pc.exports=TX.VAL.FUEL.ZS.UN)
ucdp.dyad <- left_join(ucdp.dyad, fuel)
rm(fuel)
# 6. Controls: Pop & GDP  -----
gdp <- read_delim("expgdpv6.0/gdpv6.txt", delim="\t")
gdp <- select(gdp, GWNoA = statenum, Year = year, pop, realgdp, rgdppc)
ucdp.dyad <- left_join(ucdp.dyad, gdp)
rm(gdp)
# 7. Controls: Area ------
area <- WDI(country="all", indicator="AG.LND.TOTL.K2", start=1960, end=2015)
area$GWNoA <- countrycode(area$iso2c, "iso2c", "cown")
area <- select(area, GWNoA, Year=year, area=AG.LND.TOTL.K2)
ucdp.dyad <- left_join(ucdp.dyad, area)
#fill pre-1960
ucdp.dyad <- ucdp.dyad %>%
group_by(DyadId) %>%
fill(area, .direction=c("up"))
rm(area)
# 8. Controls: Polity -----
polity <- read_excel("p4v2015.xls")
polity <- select(polity, GWNoA = ccode, Year = year, polity2)
ucdp.dyad <- left_join(ucdp.dyad, polity)
rm(polity)
# 9. Control: Mediation -----
mediation <- read.xls("CWM Data, August 2014.xlsx")
mediation <- filter(mediation, Med_yes.no==1)
mediation <- select(mediation, country, med.begins, med.ends, episode.end.date)
mediation$byear <- str_extract(mediation$med.begins, "\\d\\d\\d\\d")
mediation$eyear <- str_extract(mediation$med.ends, "\\d\\d\\d\\d")
mediation$eyear <- ifelse(is.na(mediation$eyear), str_extract(mediation$episode.end.date, "\\d\\d\\d\\d"), mediation$eyear)
mediation <- filter(mediation, !is.na(eyear) & !is.na(byear))
mediation$GWNoA <- countrycode(mediation$country, "country.name", "cown")
mediation <- mediation %>%
rowwise() %>%
do(data.frame(GWNoA=.$GWNoA, Year=seq(as.numeric(.$byear), as.numeric(.$eyear)), mediation=1)) %>%
arrange(GWNoA, Year)
mediation$dup <- ifelse(duplicated(mediation)==T, 1, 0)
mediation <- subset(mediation, dup==0)
mediation <- select(mediation, -dup)
ucdp.dyad <- left_join(ucdp.dyad, mediation)
ucdp.dyad$mediation[is.na(ucdp.dyad$mediation)] <- 0
rm(mediation)
# 10. Control: Contiguous Civil Wars ------
cont <- read.csv("contdird.csv")
#limit to land contiguity
cont <- filter(cont, conttype==1)
cont <- select(cont, GWNoA = state1no, state2 = state2no, Year = year)
#load ucdp data and aggregate to country years
#keep all conflict types
load("ucdp-prio-acd-4-2016.RData")
ucdp.prio.acd <- separate_rows(ucdp.prio.acd, GWNoA, sep=", ")
ucdp.prio.acd <- ucdp.prio.acd %>%
group_by(GWNoA, Year) %>%
summarize(cont_interstate=sum(TypeOfConflict==2), cont_civil=sum(TypeOfConflict!=2), cont_maxint=max(IntensityLevel))
ucdp.prio.acd <- rename(ucdp.prio.acd, state2 = GWNoA)
ucdp.prio.acd$state2 <- as.numeric(as.character(ucdp.prio.acd$state2))
cont <- left_join(cont, ucdp.prio.acd)
rm(ucdp.prio.acd)
#aggregate
cont <- cont %>%
group_by(GWNoA, Year) %>%
summarize(cont_interstate=sum(cont_interstate, na.rm=T), cont_civil=sum(cont_civil, na.rm=T), cont_maxint=max(cont_maxint, na.rm=T))
ucdp.dyad <- left_join(ucdp.dyad, cont)
rm(cont)
# 11. Control: External Support -------
support <- read_excel("extsup_large.xls")
support <- select(support, Year = ywp_year, SideBID = actorID, external_exists, external_type_code, external_name)
support$external_exists[support$external_exists < 0] <- NA
# aggregated to group-years
support <- support %>%
group_by(SideBID, Year) %>%
summarize(external_supporters=sum(external_exists, na.rm=T))
ucdp.dyad <- left_join(ucdp.dyad, support)
ucdp.dyad$external_supporters[ucdp.dyad$Year > 1974 & is.na(ucdp.dyad$external_supporters)] <- 0
rm(support)
# 12. Control: Lootable resources ------
loot <- read.csv("all_resources_country.csv")
loot <- rename(loot, GWNoA = COWCODE)
loot$loot.dia <- ifelse(!is.na(loot$diamond.sites), 1, 0)
loot$loot.gem <- ifelse(!is.na(loot$gem.sites), 1, 0)
loot$loot.gold <- ifelse(!is.na(loot$gold.sites), 1, 0)
loot$loot.oil <- ifelse(!is.na(loot$oil.sites), 1, 0)
loot$loot.drugs <- ifelse(!is.na(loot$drug.sites), 1, 0)
loot$lootable <- ifelse(loot$loot.dia==1 | loot$loot.gem==1 | loot$loot.gold==1 | loot$loot.oil==1 | loot$loot.drugs==1, 1, 0)
loot <- select(loot, GWNoA, loot.dia, loot.gem, loot.gold, loot.oil, loot.drugs, lootable, tot.resource.sites)
ucdp.dyad <- left_join(ucdp.dyad, loot)
rm(loot)
# 13. Battle-related deaths -------
brd <- read.csv("ucdp-brd-dyadic-50-2016.csv")
brd <- select(brd, DyadId, Year, BdBest)
ucdp.dyad <- left_join(ucdp.dyad, brd)
rm(brd)
country.ep <- ucdp.dyad %>%
group_by(epnum) %>%
summarize(n_rebels=n_distinct(SideBID), n_joiners=sum(new.joiner, na.rm=T), n_splinters=sum(new.splinter, na.rm=T), n_multieth=sum(new.multi.alliance, na.rm=T), n_monoeth=sum(new.mono.alliance, na.rm=T), latentmean_mean=mean(latentmean, na.rm=T), latentmean_min=min(latentmean, na.rm=T), maxint=max(IntensityLevel), ethfrac=mean(ethfrac, na.rm=T), pop=mean(pop, na.rm=T), rgdppc=mean(rgdppc, na.rm=T), polity2=mean(polity2, na.rm=T), polity2min=min(polity2, na.rm=T), polity2max=max(polity2, na.rm=T))
country.ep <- ucdp.dyad %>%
group_by(conflict_ep) %>%
summarize(n_rebels=n_distinct(SideBID), n_joiners=sum(new.joiner, na.rm=T), n_splinters=sum(new.splinter, na.rm=T), n_multieth=sum(new.multi.alliance, na.rm=T), n_monoeth=sum(new.mono.alliance, na.rm=T), latentmean_mean=mean(latentmean, na.rm=T), latentmean_min=min(latentmean, na.rm=T), maxint=max(IntensityLevel), ethfrac=mean(ethfrac, na.rm=T), pop=mean(pop, na.rm=T), rgdppc=mean(rgdppc, na.rm=T), polity2=mean(polity2, na.rm=T), polity2min=min(polity2, na.rm=T), polity2max=max(polity2, na.rm=T))
war.ep <- filter(country.ep, maxint==2)
summary(glm(n_rebels ~ latentmean_mean + ethfrac, data=war.ep, family="poisson"))
country.ep <- ucdp.dyad %>%
group_by(conflict_ep) %>%
summarize(n_rebels=n_distinct(SideBID), n_joiners=sum(new.joiner, na.rm=T), n_splinters=sum(new.splinter, na.rm=T), n_multieth=sum(new.multi.alliance, na.rm=T), n_monoeth=sum(new.mono.alliance, na.rm=T), latentmean_mean=mean(latentmean, na.rm=T), latentmean_min=min(latentmean, na.rm=T), maxint=max(IntensityLevel), ethfrac=mean(ethfrac, na.rm=T), pop=mean(pop, na.rm=T), rgdppc=mean(rgdppc, na.rm=T), polity2=mean(polity2, na.rm=T), polity2min=min(polity2, na.rm=T), polity2max=max(polity2, na.rm=T), epnum=first(epnum))
war.ep <- filter(country.ep, maxint==2)
summary(glm(n_rebels ~ latentmean_mean + ethfrac + epnum, data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_mean + ethfrac + (epnum>1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_mean  + (epnum>1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_mean + ethfrac + (epnum>1) + log(area), data=war.ep, family="poisson"))
country.ep <- ucdp.dyad %>%
group_by(conflict_ep) %>%
summarize(n_rebels=n_distinct(SideBID), n_joiners=sum(new.joiner, na.rm=T), n_splinters=sum(new.splinter, na.rm=T), n_multieth=sum(new.multi.alliance, na.rm=T), n_monoeth=sum(new.mono.alliance, na.rm=T), latentmean_mean=mean(latentmean, na.rm=T), latentmean_min=min(latentmean, na.rm=T), maxint=max(IntensityLevel), ethfrac=mean(ethfrac, na.rm=T), pop=mean(pop, na.rm=T), rgdppc=mean(rgdppc, na.rm=T), area=max(area,na.rm=T), polity2=mean(polity2, na.rm=T), polity2min=min(polity2, na.rm=T), polity2max=max(polity2, na.rm=T), epnum=first(epnum))
war.ep <- filter(country.ep, maxint==2)
summary(glm(n_rebels ~ latentmean_mean + ethfrac + (epnum>1) + log(area), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_mean + ethfrac + (epnum>1) + log(area+1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_mean + ethfrac  + log(area+1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_min + ethfrac  + log(area+1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_min + ethfrac  + epnum + log(area+1), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc), data=war.ep, family="poisson"))
summary(glm(n_rebels ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop), data=war.ep, family="poisson"))
table(war.ep$n_joiners)
summary(glm(n_rebels ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family="poisson"))
texreg::screenreg(glm(n_rebels ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family="poisson"))
summary(glm((n_jointers>0) ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family=binomial("logit")))
summary(glm((n_joiners>0) ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family=binomial("logit")))
table(war.ep$n_joiners>0)
summary(glm(n_joiners ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family=binomial("poisson")))
summary(glm(n_joiners ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family="poisson"))
summary(glm(n_splinters ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family="poisson"))
summary(glm(n_multieth ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family="poisson"))
summary(glm((n_multieth>0) ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, family=binomial("logit")))
summary(Zelig::zelig((n_multieth>0) ~ latentmean_min + ethfrac  + epnum + log(area+1) + log(rgdppc) + log(pop) + polity2, data=war.ep, model="relogit"))
summary(Zelig::zelig((n_multieth>0) ~ latentmean_min + ethfrac  + epnum + log(area) + log(rgdppc) + log(pop) + polity2, data=war.ep, model="relogit"))
summary(Zelig::zelig((n_monoeth>0) ~ latentmean_min + ethfrac  + epnum + log(area) + log(rgdppc) + log(pop) + polity2, data=war.ep, model="relogit"))
table(ucdp.dyad$TypeOfConflict)
View(subset(ucdp.dyad, new.joiner==1))
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(conflict.year, maxint==1), family=binomial("logit"))
conflict.year <- read.csv("entry_analysis/conflict_year.csv")
conflict.year <- ucdp.dyad %>%
group_by(ConflictId, Year) %>%
summarize(GWNoA=first(GWNoA), Incompatibility=first(Incompatibility), n_rebels=n_distinct(SideBID), n_conflicts=n_distinct(ConflictId), maxint=max(IntensityLevel), new.joiner=max(new.joiner), new.alliance=max(new.alliance), new.splinter=max(new.splinter), latentmean=min(latentmean), mtnest=max(mtnest), oil.fearon=max(Oil), oil.pc.exports=max(oil.pc.exports), oilpc=max(oilpc), ethfrac=max(ethfrac), relfrac=max(relfrac), country_ethnic=max(country_ethnic), country_excluded=max(country_excluded), pop=max(pop), area=max(area), rgdppc=max(rgdppc), polity2=max(polity2), mediation=max(mediation), external_supporters=sum(external_supporters>0), lootable=max(lootable), tot.resource.sites=max(tot.resource.sites), BdBest=sum(BdBest), existing.support=sum(external_supporters>0 & new.joiner==0), cont_civil=max(cont_civil), new.multi.alliance=max(new.multi.alliance), new.mono.alliance=max(new.mono.alliance), tot.resource.sites=max(tot.resource.sites))
# create some lagged variables
conflict.year <- conflict.year %>%
group_by(ConflictId) %>%
mutate(latentmean_lag=lag(latentmean), latentmean_lag2=lag(latentmean,2), lagged_rebels=lag(n_rebels), oilpc_lag=lag(oilpc), oil.pc.exports_lag=lag(oil.pc.exports), lag_conflicts=lag(n_conflicts))
#recodes
conflict.year$latentmean_diff <- conflict.year$latentmean_lag - conflict.year$latentmean_lag2
conflict.year$GWNoA <- as.factor(conflict.year$GWNoA)
conflict.year$lgdp <- log(conflict.year$rgdppc)
conflict.year$lpop <- log(conflict.year$pop)
conflict.year$larea <- log(conflict.year$area)
conflict.year$yearf <- as.factor(conflict.year$Year)
conflict.year$new_conflict <- ifelse(conflict.year$n_conflicts > conflict.year$lag_conflicts, 1, 0)
conflict.year$multireb <- ifelse(conflict.year$lagged_rebels>1, 1, 0)
conflict.year$latentmean_diff <- set_label(conflict.year$latentmean_diff, "Change in Human Rights")
conflict.year$new.joiner <- set_label(conflict.year$new.joiner, "New Rebel Group")
conflict.year$postcw <- ifelse(conflict.year$Year > 1989, 1, 0)
conflict.year$conflictfe <- as.factor(conflict.year$ConflictId)
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(conflict.year, maxint==1), family=binomial("logit"))
summary(m2)
View(subset(ucdp.dyad, new.joiner==1 & monoeth==1))
with(subset(ucdp.dyad, new.joiner==1 & monoeth==1), summary(latentmean))
cases <- select(ucdp.dyad, Year, Location, SideB, new.joiner, monoeth, latentmean)
View(subset(cases, new.joiner==1 & monoeth==1))
install.packages(c("coin", "deSolve", "dplyr", "git2r", "haven", "igraph", "mediation", "memisc", "nleqslv", "Rcpp", "Rvmmin", "sf"))
install.packages(c("dplyr", "git2r", "igraph"))
y
install.packages("dplyr")
install.packages("igraph")
install.packages("git2r")
install.packages(c("git2r", "igraph"))
install.packages(c("curl", "foreign", "R6", "Rcpp"), lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("igraph")
install.packages(c("devtools", "igraph", "memisc", "modelr", "sandwich", "sf", "sjstats", "stringdist", "VGAM", "withr"))
install.packages(c("boot", "mgcv"), lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("pander", "purrr", "reshape", "sjmisc", "sjPlot", "Zelig"))
install.packages(c("boot", "mgcv"), lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("data.table", "devtools", "glue", "lubridate", "memisc", "multcomp", "pglm", "plm", "REndo", "rgdal", "rgeos", "rlang", "rmarkdown", "robustbase", "sf", "sjlabelled", "tidyselect", "tidyverse", "withr"))
install.packages(c("lazyeval", "openssl"), lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(lmtest)#
library(pglm)
library(plm)
library(texreg)
library(sjmisc)
library(sjlabelled)
conflict.year <- read.csv("entry_analysis/conflict_year.csv")
conflict.year$latentmean_diff <- set_label(conflict.year$latentmean_diff, "Change in Human Rights")
conflict.year$new.joiner <- set_label(conflict.year$new.joiner, "Formation of New Rebel Group")
m1 <- glm(new.joiner ~ latentmean_diff, data=data.frame(conflict.year), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + maxint + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
summary(m2c)
summary(m2)
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
#run only for non-wars --------
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + maxint + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
#run only for non-wars --------
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
group <- read.csv("~/Dropbox/Dissertation/Document/entry_chapter/entry_analysis/group.csv")#
c1 <- glm(monoeth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=group, family=binomial("logit"))
c1
summary(c1)
m1 <- glm(new.joiner ~ latentmean_diff, data=data.frame(conflict.year), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + maxint + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=data.frame(conflict.year), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=data.frame(conflict.year), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m4 <- glm(new.joiner ~ latentmean_diff + maxint + cont_civil + multireb + conflictfe + yearf, data=data.frame(conflict.year), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
map <- list("(Intercept)"="(Intercept)","latentmean_diff" = "Change in Human Rights", "ethfrac" = "Ethnolinguistic Fractionalization", "I(ethfrac^2)"="Ethnolinguistic Fractionalization$^{2}$", "latentmean_diff:ethfrac"="Human Rights X Fractionalization", "latentmean_diff:I(ethfrac^2)"="Human Rights X Fractionalization$^{2}$", "country_ethnic"="Ethnic Groups", "maxint" = "Intensity Level", "new_conflict" = "New Conflict", "multireb"="Prev. Multi-rebel", "cont_civil" = "Contiguous Civil War", "lagged_rebels" = "Lagged Rebel Groups", "Incompatibilityterritory" = "Secessionist", "larea"="Logged Area", "mtnest"="Mountainous Terrain", "lgdp" = "Logged GDP per capita",  "lpop" = "Logged Population", "polity2" = "Polity", "postcw"="Post Cold War", "tot.resource.sites"="Lootable Resource Sites")
screenreg(list(m1,m2,m3, m4), custom.coef.map=map, caption="Logit Models of Rebel Group Formation", label="tab:entry")
#run only for wars --------
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
#run only for non-wars --------
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
c1 <- glm(monoeth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2), family=binomial("logit"))
summary(c3)
c1 <- glm(monoeth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c3)
c1 <- glm(monoeth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=group, family=binomial("logit"))
c2 <- glm(multieth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=group, family=binomial("logit"))
c3 <- glm(noneth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=group, family=binomial("logit"))
summary(c1)
summary(c2)
summary(c3)
c1 <- glm(monoeth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1), family=binomial("logit"))
summary(c3)
View(conflict.year)
table(conflict.year$Incompatibility)
# run only for secessionist -----
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), Incompatibility=="territory"), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + Incompatibility + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), maxint==1), family=binomial("logit"))
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=="territory"), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m2 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=="territory"), family=binomial("logit"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + Incompatibility + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=='territory'), family=binomial("logit"))
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=='territory'), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), Incompatibility=='territory'), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
# run only for government -----
m1 <- glm(new.joiner ~ latentmean_diff, data=subset(data.frame(conflict.year), Incompatibility=="government"), family=binomial("logit"))
m1c <- coeftest(m1, vcov. = vcovHC(m1, type="HC1", cluster="GWNoA"))
m1c
m2 <- glm(new.joiner ~ latentmean_diff + ethfrac + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=="government"), family=binomial("logit"))
m2c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m2c
m3 <- glm(new.joiner ~ latentmean_diff*ethfrac + maxint + cont_civil + multireb + lgdp + lpop + larea + mtnest + polity2 + postcw + tot.resource.sites, data=subset(data.frame(conflict.year), Incompatibility=='government'), family=binomial("logit"))
m3c <- coeftest(m2, vcov. = vcovHC(m2, type="HC1", cluster="GWNoA"))
m3c
m4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), Incompatibility=='government'), family=binomial("logit"))
m4c <- coeftest(m4, vcov. = vcovHC(m4, type="HC1", cluster="GWNoA"))
m4c
table(group$Incompatibility)
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
c2 <- glm(multieth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c3)
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1 & Incompatibility=="territory"), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1 & Incompatibility=="territory"), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1 & Incompatibility=="territory"), family=binomial("logit"))
summary(c3)
install.packages(c("broom", "car", "dynsurv", "RcppEigen", "recipes", "rmarkdown", "tidyverse", "timeDate", "Zelig"))
install.packages(c("Matrix", "stringi"), lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("Matrix", "stringi"), lib = "/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1 & Incompatibility=="territory"), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==1 & Incompatibility=="territory"), family=binomial("logit"))
summary(c2)
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c2)
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c1)
with(subset(group, IntensityLevel==2 & Incompatibility=="government"), table(monoeth, joiner))
7/35
1/15
with(subset(group, IntensityLevel==2 & Incompatibility=="government"), table(multieth, joiner))
with(subset(group, IntensityLevel==2 & Incompatibility=="government"), chisq.test(table(monoeth, joiner)))
with(subset(group, IntensityLevel==2 & Incompatibility=="government"), chisq.test(table(multieth, joiner)))
c1 <- glm(monoeth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c1)
c2 <- glm(multieth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c2)
c3 <- glm(noneth ~ joiner + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2 & Incompatibility=="government"), family=binomial("logit"))
summary(c3)
install.packages("sjPlot")
sjPlot::sjp.setTheme
install.packages("TMB")
?sjp.setTHeme
??sjp.setTheme
install.packages("TMB", type="source")
??set_label
library(bookdown)
wj4 <- glm(new.joiner ~ latentmean_diff + cont_civil + multireb + conflictfe + yearf, data=subset(data.frame(conflict.year), maxint==2), family=binomial("logit"))
summary(wj4)
library(texreg)
library(lme4)
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
sjp.glmer(h7, type="pred", show.ci=T, title="", vars="attack_recode_bin", show.scatter=F, axis.lim=c(0,.6))
library(sjPlot)
library(ggplot2)
library(sjmisc)
set_theme(base=theme_bw())
sjp.glmer(h7, type="pred", show.ci=T, title="", vars="attack_recode_bin", show.scatter=F, axis.lim=c(0,.6))
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models.Rdata")
sjp.glmer(h7, type="pred", show.ci=T, title="", vars="attack_recode_bin", show.scatter=F, axis.lim=c(0,.6))
?sjp.glmer
sjp.glmer(h7, type="pred.fe", show.ci=T, title="", vars="attack_recode_bin", show.scatter=F, axis.lim=c(0,.6))
?plot_model
plot_model(h7, type="eff")
plot_model(h7, type="eff", terms = "attack_recode_bin")
plot_model(h7, type="eff", terms = "attack_recode_bin", title = "")
plot_model(h7, type="pred", terms = "attack_recode_bin", title = "")
plot_model(h7, type="eff", terms = "attack_recode_bin", title = "")
plot_model(h1, type="eff", terms = "attack_recode_bin", title = "")
plot_model(h1, type="eff", terms = "latentmean", title = "")
plot_model(g3, type="eff", terms = "attack_recode_bin", title = "")
group.years <- read.csv("splinter_analysis/survival_data.csv")
View(group.years)
group.years$TypeOfConflict
group <- read.csv("~/Dropbox/Dissertation/Document/entry_chapter/entry_analysis/group.csv")#
c1 <- glm(monoeth ~ splinter + joiner + Incompatibility + prevactive + ethfrac + (rebpresosts!="no"), data=subset(group, IntensityLevel==2), family=binomial("logit"))
summary(c)
summary(c1)
??glmer
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
install.packages("ordinal")
library(ordinal)
afro$vote
table(afro$vote)
library(sjmisc)
frq(afro$vote)
library(dplyr)
frq(afro$violence)
afro$viol_ord <- ifelse(afro$violence > 4, NA, afro$violence)
frq(afro$viol_ord)
m1 <- clmm(viol_ord ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex, data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country ), data=afro, link="logit", weights=withinwt, threshold="flexible")
system("say finished")
summary(m1)
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country:Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Country:Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
table(is.na(afro$Country))
table(is.na(afro$Ethnic))
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1 | Country:Ethnic), data=subset(afro, !is.na(Ethnic)), link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1 | Ethnic), data=subset(afro, !is.na(Ethnic)), link="logit", weights=withinwt, threshold="flexible")
system("say finished")
summary(m1)
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
system("say finished")
summary(m1)
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic) + (1|Country/Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic) + (1|Country:Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
frq(afro$eth_id)
afro$eth_ord <- ifelse(afro$eth_id < 0 | afro$eth_id > 5, NA, afro$eth_id)
m2 <- clmm(as.factor(eth_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
system("say finished")
summary(m2)
save.image(file="/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models_ordinal.Rdata")
rm(afro)
save.image(file="/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models_ordinal.Rdata")
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
afro$eth_ord <- afro$eth_ord*-1
afro$eth_ord <- ifelse(afro$eth_id < 0 | afro$eth_id > 5, NA, afro$eth_id) #higher=more nationalist
afro$eth_ord <- afro$eth_ord*-1
afro$viol_ord <- ifelse(afro$violence > 4, NA, afro$violence)
m2 <- clmm(as.factor(eth_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic), data=afro, link="logit", weights=withinwt, threshold="flexible")
summary(m2)
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models_ordinal.Rdata")
texreg(list(m1,m2), caption="Multilevel Ordinal Models of Attitudes Toward Violence and Ethnic Identity", custom.coef.map=map, custom.model.names=c("M1 Violence (Used)", "M2 Ethnic ID"), label="tab:ordinal")
map <- list("(Intercept)"="(Intercept)","latentmean"="Human Rights", "ethfrac"="Ethnolinguistic Fractionalization", "I(ethfrac^2)"="Ethnolinguistic Fractionalization$^{2}$", "polity2"="Polity", "civil1"="Civil War", "separatist1"="Separatist War", "attack_recode_bin1"="Attacked", "intim_recode_bin1"="Intimidated", "employment_recode1"="Employed", "primary1"="Primary Education", "urban_recode1"="Urban", "ruling_supporter1"="Ruling Party Supporter", "lage"="Age", "sex2"="Female")
texreg(list(m1,m2), caption="Multilevel Ordinal Models of Attitudes Toward Violence and Ethnic Identity", custom.coef.map=map, custom.model.names=c("M1 Violence (Used)", "M2 Ethnic ID"), label="tab:ordinal")
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models_ordinal.Rdata")
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
afro$viol_ord <- ifelse(afro$violence > 4, NA, afro$violence)
afro$eth_ord <- ifelse(afro$eth_id < 0 | afro$eth_id > 5, NA, afro$eth_id) #higher=more ethnic
afro$eth_ord <- afro$eth_ord*-1
class(afro)
m1 <- clmm(as.factor(viol_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic), data=data.frame(afro), link="logit", weights=withinwt, threshold="flexible")
m2 <- clmm(as.factor(eth_ord) ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1|Country) + (1 | Ethnic), data=data.frame(afro), link="logit", weights=withinwt, threshold="flexible")
rm(afro)
save.image(file="/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/survey_models_ordinal.Rdata")
?stargazer
library(stargazer)
?stargazer
m1$coefficients
texreg(list(m1,m2), caption="Multilevel Ordinal Models of Attitudes Toward Violence and Ethnic Identity", custom.coef.map=map, custom.model.names=c("M1 Violence (Used)", "M2 Ethnic ID"), label="tab:ordinal")
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
frq(afro$violence)
group <- read.csv("~/Dropbox/Dissertation/Document/entry_chapter/entry_analysis/group.csv")#
table(group$Incompatibility)
country.year <- read.csv("~/Dropbox/Dissertation/Document/entry_chapter/entry_analysis/conflict_year.csv")
country.year$Incompatibility
with(subset(country.year, Incompatibility=="territory"), table(new.multi.alliance))
with(subset(country.year, Incompatibility=="territory"), table(new.mono.alliance))
knit_with_parameters('~/Dropbox/Dissertation/Document/dissertation.Rmd')
install.packages(c("coin", "ggeffects", "hms", "Rcpp", "rgdal", "sjmisc", "sjstats"))
install.packages("coin")
install.packages("Rcpp", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
